
#include "custom_systick.h"


// By default SysTick is enabled for 10 milliseconds interrupt
void systick_init(uint16_t tickRateInMs){
	volatile uint32_t reloadValue = ((SystemCoreClock/1000)*tickRateInMs) - 1;
	SysTick->CTRL = 0;
	SysTick->LOAD = reloadValue;

	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk;
	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;

}

void SysTick_Handler(void){

	// Cycling counter for 2 seconds
	timingCounter++;
	if(timingCounter > 200){
		timingCounter = 1;
	}

	if((timingCounter%5) == 0){
		task50ms = true;
	}
	else{
		task50ms = false;
	}
	if((timingCounter%10) == 0){
		task100ms = true;
	}else{
		task100ms = false;
	}

	// Call the dedicated tasks here..
	if(task50ms){

	}
	if(task100ms){

	}
}

void task_50ms(void){

}
